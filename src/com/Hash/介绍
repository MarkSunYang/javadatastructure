哈希表：

1. 实现散列表的几种方法
2. 比较这几种方法
3. 介绍散列的多种应用
4. 将散列表和二叉查找的比较

理想的散表数据结构是包含一些item具有固定大小的数组。通常查找是对某个部分（数据域）进行的。关键字
每个关键字被映射到0-table-1这个范围中的某个数，并且被放到适当的单元中，这个映射就叫做散列函数
两个关键字散列到同一个值的时候叫做冲突。

key mod tablesize


HashTable HashSet TreeSet
Hash表也称散列表，也有直接译作哈希表，
Hash表是一种根据关键字值（key - value）而直接进行访问的数据结构。
它基于数组，通过把关键字映射到数组的某个下标来加快查找速度，但是又和数组、链表、树等数据结构不同，
在这些数据结构中查找某个关键字，通常要遍历整个数据结构，也就是O(N)的时间级，但是对于哈希表来说，只是O(1)的时间级。

自己写哈希表
数组+链表
数组+二叉树




使用哈希表管理雇员信息：

class HashTable{
    EmplLinkedList[] arr
    散列函数，id对应的链表
}

EmplinkedList{
    Empl head//头指针，第一个元素
    add,list,find,del //
}

class Employee{
    id
    name
    address
}