package com.Demo;

public class BinaryTreeSearch {
    /*
     使用前序，中序，后续的方式查找指定节点
     1.先判断当前节点的no是否等于要查找的
     2.如果 相等，返回当前节点
     3.如果不等，则判断当前节点的左子节点是否为空，如果不为空递归前序查找
     4.如果左递归前序查找找到节点则返回，否则继续判断

     */

    /**
     * 删除
     * 1.如果删除的是叶子节点，则删除该节点
     * 2.如果删除的节点是非叶子节点，则删除该子树
     *
     * 思路：
     * 1.因为二叉树是单向的，所以判断当前节点的子节点是否需要删除，不能去判断当前节点是不是需要删除的节点
     * 2.先判断如果当前节点的左子树不为空，并且左子节点的编号就是需要删除的，就将this.left置空
     * 3.如果当前节点的右子节点不为空，并且左子节点就是要删除节点
     */

}
